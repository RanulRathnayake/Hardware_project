
Final code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a76  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000017e  00800060  00000a76  00000aea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000c68  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c98  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b0  00000000  00000000  00000cd8  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001d6d  00000000  00000000  00000d88  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000795  00000000  00000000  00002af5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000d94  00000000  00000000  0000328a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b0  00000000  00000000  00004020  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000405  00000000  00000000  000040d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000013cd  00000000  00000000  000044d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  000058a2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3c 00 	jmp	0x78	; 0x78 <__ctors_end>
   4:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
   8:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
   c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  10:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  14:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  18:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  1c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  20:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  24:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  28:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  2c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  30:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  34:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  38:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  3c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  40:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  44:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  48:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  4c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  50:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  54:	13 03       	mulsu	r17, r19
  56:	fb 02       	muls	r31, r27
  58:	fe 02       	muls	r31, r30
  5a:	01 03       	mulsu	r16, r17
  5c:	04 03       	mulsu	r16, r20
  5e:	07 03       	mulsu	r16, r23
  60:	0a 03       	fmul	r16, r18
  62:	0d 03       	fmul	r16, r21
  64:	10 03       	mulsu	r17, r16
  66:	c1 03       	fmuls	r20, r17
  68:	a9 03       	fmulsu	r18, r17
  6a:	ac 03       	fmulsu	r18, r20
  6c:	af 03       	fmulsu	r18, r23
  6e:	b2 03       	fmuls	r19, r18
  70:	b5 03       	fmuls	r19, r21
  72:	b8 03       	fmulsu	r19, r16
  74:	bb 03       	fmulsu	r19, r19
  76:	be 03       	fmulsu	r19, r22

00000078 <__ctors_end>:
  78:	11 24       	eor	r1, r1
  7a:	1f be       	out	0x3f, r1	; 63
  7c:	cf e5       	ldi	r28, 0x5F	; 95
  7e:	d8 e0       	ldi	r29, 0x08	; 8
  80:	de bf       	out	0x3e, r29	; 62
  82:	cd bf       	out	0x3d, r28	; 61

00000084 <__do_copy_data>:
  84:	11 e0       	ldi	r17, 0x01	; 1
  86:	a0 e6       	ldi	r26, 0x60	; 96
  88:	b0 e0       	ldi	r27, 0x00	; 0
  8a:	e6 e7       	ldi	r30, 0x76	; 118
  8c:	fa e0       	ldi	r31, 0x0A	; 10
  8e:	02 c0       	rjmp	.+4      	; 0x94 <__do_copy_data+0x10>
  90:	05 90       	lpm	r0, Z+
  92:	0d 92       	st	X+, r0
  94:	ae 3d       	cpi	r26, 0xDE	; 222
  96:	b1 07       	cpc	r27, r17
  98:	d9 f7       	brne	.-10     	; 0x90 <__do_copy_data+0xc>

0000009a <__do_clear_bss>:
  9a:	21 e0       	ldi	r18, 0x01	; 1
  9c:	ae ed       	ldi	r26, 0xDE	; 222
  9e:	b1 e0       	ldi	r27, 0x01	; 1
  a0:	01 c0       	rjmp	.+2      	; 0xa4 <.do_clear_bss_start>

000000a2 <.do_clear_bss_loop>:
  a2:	1d 92       	st	X+, r1

000000a4 <.do_clear_bss_start>:
  a4:	ae 3d       	cpi	r26, 0xDE	; 222
  a6:	b2 07       	cpc	r27, r18
  a8:	e1 f7       	brne	.-8      	; 0xa2 <.do_clear_bss_loop>
  aa:	0e 94 e6 01 	call	0x3cc	; 0x3cc <main>
  ae:	0c 94 39 05 	jmp	0xa72	; 0xa72 <_exit>

000000b2 <__bad_interrupt>:
  b2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b6 <lcdcmd>:
	}
	
}

void lcdcmd(unsigned char cmd){
	PORTC &= ~(1<<RS);
  b6:	95 b3       	in	r25, 0x15	; 21
  b8:	9f 77       	andi	r25, 0x7F	; 127
  ba:	95 bb       	out	0x15, r25	; 21
	LCD = cmd & 0XF0;
  bc:	98 2f       	mov	r25, r24
  be:	90 7f       	andi	r25, 0xF0	; 240
  c0:	92 bb       	out	0x12, r25	; 18
	PORTC |= (1<<EN);
  c2:	95 b3       	in	r25, 0x15	; 21
  c4:	90 64       	ori	r25, 0x40	; 64
  c6:	95 bb       	out	0x15, r25	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c8:	ef ec       	ldi	r30, 0xCF	; 207
  ca:	f7 e0       	ldi	r31, 0x07	; 7
  cc:	31 97       	sbiw	r30, 0x01	; 1
  ce:	f1 f7       	brne	.-4      	; 0xcc <lcdcmd+0x16>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <lcdcmd+0x1c>
  d2:	00 00       	nop
	_delay_ms(1);
	PORTC &= ~(1<<EN);
  d4:	95 b3       	in	r25, 0x15	; 21
  d6:	9f 7b       	andi	r25, 0xBF	; 191
  d8:	95 bb       	out	0x15, r25	; 21
	
	LCD = cmd<<4;
  da:	82 95       	swap	r24
  dc:	80 7f       	andi	r24, 0xF0	; 240
  de:	82 bb       	out	0x12, r24	; 18
	PORTC |= (1<<EN);
  e0:	85 b3       	in	r24, 0x15	; 21
  e2:	80 64       	ori	r24, 0x40	; 64
  e4:	85 bb       	out	0x15, r24	; 21
  e6:	8f ec       	ldi	r24, 0xCF	; 207
  e8:	97 e0       	ldi	r25, 0x07	; 7
  ea:	01 97       	sbiw	r24, 0x01	; 1
  ec:	f1 f7       	brne	.-4      	; 0xea <lcdcmd+0x34>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <lcdcmd+0x3a>
  f0:	00 00       	nop
	_delay_ms(1);
	PORTC &= ~(1<<EN);
  f2:	85 b3       	in	r24, 0x15	; 21
  f4:	8f 7b       	andi	r24, 0xBF	; 191
  f6:	85 bb       	out	0x15, r24	; 21
  f8:	08 95       	ret

000000fa <lcd_init>:
}

void lcd_init(){
	DDRD = 0XFF;
  fa:	8f ef       	ldi	r24, 0xFF	; 255
  fc:	81 bb       	out	0x11, r24	; 17
	PORTC &= ~(1<<EN);
  fe:	85 b3       	in	r24, 0x15	; 21
 100:	8f 7b       	andi	r24, 0xBF	; 191
 102:	85 bb       	out	0x15, r24	; 21
	lcdcmd(0X33);
 104:	83 e3       	ldi	r24, 0x33	; 51
 106:	0e 94 5b 00 	call	0xb6	; 0xb6 <lcdcmd>
	lcdcmd(0X32);
 10a:	82 e3       	ldi	r24, 0x32	; 50
 10c:	0e 94 5b 00 	call	0xb6	; 0xb6 <lcdcmd>
	lcdcmd(0X28);
 110:	88 e2       	ldi	r24, 0x28	; 40
 112:	0e 94 5b 00 	call	0xb6	; 0xb6 <lcdcmd>
	lcdcmd(0X0E);
 116:	8e e0       	ldi	r24, 0x0E	; 14
 118:	0e 94 5b 00 	call	0xb6	; 0xb6 <lcdcmd>
	lcdcmd(0X01);
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	0e 94 5b 00 	call	0xb6	; 0xb6 <lcdcmd>
 122:	8f e9       	ldi	r24, 0x9F	; 159
 124:	9f e0       	ldi	r25, 0x0F	; 15
 126:	01 97       	sbiw	r24, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <lcd_init+0x2c>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <lcd_init+0x32>
 12c:	00 00       	nop
 12e:	08 95       	ret

00000130 <keypad>:
float hx=0;



unsigned char keypad(){
	PORTB = 0b11111110;
 130:	8e ef       	ldi	r24, 0xFE	; 254
 132:	88 bb       	out	0x18, r24	; 24
	
	if ((PINB & (1<<PINB4)) ==0)
 134:	b4 99       	sbic	0x16, 4	; 22
 136:	08 c0       	rjmp	.+16     	; 0x148 <keypad+0x18>
 138:	8f e2       	ldi	r24, 0x2F	; 47
 13a:	95 e7       	ldi	r25, 0x75	; 117
 13c:	01 97       	sbiw	r24, 0x01	; 1
 13e:	f1 f7       	brne	.-4      	; 0x13c <keypad+0xc>
 140:	00 c0       	rjmp	.+0      	; 0x142 <keypad+0x12>
 142:	00 00       	nop
	{
		_delay_ms(15);
		return '7';
 144:	87 e3       	ldi	r24, 0x37	; 55
 146:	08 95       	ret
	}
	else if((PINB & (1<<PINB5)) ==0)
 148:	b5 99       	sbic	0x16, 5	; 22
 14a:	08 c0       	rjmp	.+16     	; 0x15c <keypad+0x2c>
 14c:	8f e2       	ldi	r24, 0x2F	; 47
 14e:	95 e7       	ldi	r25, 0x75	; 117
 150:	01 97       	sbiw	r24, 0x01	; 1
 152:	f1 f7       	brne	.-4      	; 0x150 <keypad+0x20>
 154:	00 c0       	rjmp	.+0      	; 0x156 <keypad+0x26>
 156:	00 00       	nop
	{
		_delay_ms(15);
		return '8';
 158:	88 e3       	ldi	r24, 0x38	; 56
 15a:	08 95       	ret
	}
	else if((PINB & (1<<PINB6)) ==0)
 15c:	b6 99       	sbic	0x16, 6	; 22
 15e:	08 c0       	rjmp	.+16     	; 0x170 <keypad+0x40>
 160:	8f e2       	ldi	r24, 0x2F	; 47
 162:	95 e7       	ldi	r25, 0x75	; 117
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <keypad+0x34>
 168:	00 c0       	rjmp	.+0      	; 0x16a <keypad+0x3a>
 16a:	00 00       	nop
	{
		_delay_ms(15);
		return '9';
 16c:	89 e3       	ldi	r24, 0x39	; 57
 16e:	08 95       	ret
	}
	else if((PINB & (1<<PINB7)) ==0)
 170:	b7 99       	sbic	0x16, 7	; 22
 172:	08 c0       	rjmp	.+16     	; 0x184 <keypad+0x54>
 174:	8f e2       	ldi	r24, 0x2F	; 47
 176:	95 e7       	ldi	r25, 0x75	; 117
 178:	01 97       	sbiw	r24, 0x01	; 1
 17a:	f1 f7       	brne	.-4      	; 0x178 <keypad+0x48>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <keypad+0x4e>
 17e:	00 00       	nop
	{
		_delay_ms(15);
		return '/';
 180:	8f e2       	ldi	r24, 0x2F	; 47
 182:	08 95       	ret
	}
	PORTB = 0b11111101;
 184:	8d ef       	ldi	r24, 0xFD	; 253
 186:	88 bb       	out	0x18, r24	; 24
	
	if ((PINB & (1<<PINB4)) ==0)
 188:	b4 99       	sbic	0x16, 4	; 22
 18a:	08 c0       	rjmp	.+16     	; 0x19c <keypad+0x6c>
 18c:	8f e2       	ldi	r24, 0x2F	; 47
 18e:	95 e7       	ldi	r25, 0x75	; 117
 190:	01 97       	sbiw	r24, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <keypad+0x60>
 194:	00 c0       	rjmp	.+0      	; 0x196 <keypad+0x66>
 196:	00 00       	nop
	{
		_delay_ms(15);
		return '4';
 198:	84 e3       	ldi	r24, 0x34	; 52
 19a:	08 95       	ret
	}
	else if((PINB & (1<<PINB5)) ==0)
 19c:	b5 99       	sbic	0x16, 5	; 22
 19e:	08 c0       	rjmp	.+16     	; 0x1b0 <keypad+0x80>
 1a0:	8f e2       	ldi	r24, 0x2F	; 47
 1a2:	95 e7       	ldi	r25, 0x75	; 117
 1a4:	01 97       	sbiw	r24, 0x01	; 1
 1a6:	f1 f7       	brne	.-4      	; 0x1a4 <keypad+0x74>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <keypad+0x7a>
 1aa:	00 00       	nop
	{
		_delay_ms(15);
		return '5';
 1ac:	85 e3       	ldi	r24, 0x35	; 53
 1ae:	08 95       	ret
	}
	else if((PINB & (1<<PINB6)) ==0)
 1b0:	b6 99       	sbic	0x16, 6	; 22
 1b2:	08 c0       	rjmp	.+16     	; 0x1c4 <keypad+0x94>
 1b4:	8f e2       	ldi	r24, 0x2F	; 47
 1b6:	95 e7       	ldi	r25, 0x75	; 117
 1b8:	01 97       	sbiw	r24, 0x01	; 1
 1ba:	f1 f7       	brne	.-4      	; 0x1b8 <keypad+0x88>
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <keypad+0x8e>
 1be:	00 00       	nop
	{
		_delay_ms(15);
		return '6';
 1c0:	86 e3       	ldi	r24, 0x36	; 54
 1c2:	08 95       	ret
	}
	else if((PINB & (1<<PINB7)) ==0)
 1c4:	b7 99       	sbic	0x16, 7	; 22
 1c6:	08 c0       	rjmp	.+16     	; 0x1d8 <keypad+0xa8>
 1c8:	8f e2       	ldi	r24, 0x2F	; 47
 1ca:	95 e7       	ldi	r25, 0x75	; 117
 1cc:	01 97       	sbiw	r24, 0x01	; 1
 1ce:	f1 f7       	brne	.-4      	; 0x1cc <keypad+0x9c>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <keypad+0xa2>
 1d2:	00 00       	nop
	{
		_delay_ms(15);
		return 'X';
 1d4:	88 e5       	ldi	r24, 0x58	; 88
 1d6:	08 95       	ret
	}
	
	PORTB = 0b11111011;
 1d8:	8b ef       	ldi	r24, 0xFB	; 251
 1da:	88 bb       	out	0x18, r24	; 24
	
	if ((PINB & (1<<PINB4)) ==0)
 1dc:	b4 99       	sbic	0x16, 4	; 22
 1de:	08 c0       	rjmp	.+16     	; 0x1f0 <keypad+0xc0>
 1e0:	8f e2       	ldi	r24, 0x2F	; 47
 1e2:	95 e7       	ldi	r25, 0x75	; 117
 1e4:	01 97       	sbiw	r24, 0x01	; 1
 1e6:	f1 f7       	brne	.-4      	; 0x1e4 <keypad+0xb4>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <keypad+0xba>
 1ea:	00 00       	nop
	{
		_delay_ms(15);
		return '1';
 1ec:	81 e3       	ldi	r24, 0x31	; 49
 1ee:	08 95       	ret
	}
	else if((PINB & (1<<PINB5)) ==0)
 1f0:	b5 99       	sbic	0x16, 5	; 22
 1f2:	08 c0       	rjmp	.+16     	; 0x204 <keypad+0xd4>
 1f4:	8f e2       	ldi	r24, 0x2F	; 47
 1f6:	95 e7       	ldi	r25, 0x75	; 117
 1f8:	01 97       	sbiw	r24, 0x01	; 1
 1fa:	f1 f7       	brne	.-4      	; 0x1f8 <keypad+0xc8>
 1fc:	00 c0       	rjmp	.+0      	; 0x1fe <keypad+0xce>
 1fe:	00 00       	nop
	{
		_delay_ms(15);
		return '2';
 200:	82 e3       	ldi	r24, 0x32	; 50
 202:	08 95       	ret
	}
	else if((PINB & (1<<PINB6)) ==0)
 204:	b6 99       	sbic	0x16, 6	; 22
 206:	08 c0       	rjmp	.+16     	; 0x218 <keypad+0xe8>
 208:	8f e2       	ldi	r24, 0x2F	; 47
 20a:	95 e7       	ldi	r25, 0x75	; 117
 20c:	01 97       	sbiw	r24, 0x01	; 1
 20e:	f1 f7       	brne	.-4      	; 0x20c <keypad+0xdc>
 210:	00 c0       	rjmp	.+0      	; 0x212 <keypad+0xe2>
 212:	00 00       	nop
	{
		_delay_ms(15);
		return '3';
 214:	83 e3       	ldi	r24, 0x33	; 51
 216:	08 95       	ret
	}
	else if((PINB & (1<<PINB7)) ==0)
 218:	b7 99       	sbic	0x16, 7	; 22
 21a:	08 c0       	rjmp	.+16     	; 0x22c <keypad+0xfc>
 21c:	8f e2       	ldi	r24, 0x2F	; 47
 21e:	95 e7       	ldi	r25, 0x75	; 117
 220:	01 97       	sbiw	r24, 0x01	; 1
 222:	f1 f7       	brne	.-4      	; 0x220 <keypad+0xf0>
 224:	00 c0       	rjmp	.+0      	; 0x226 <keypad+0xf6>
 226:	00 00       	nop
	{
		_delay_ms(15);
		return '-';
 228:	8d e2       	ldi	r24, 0x2D	; 45
 22a:	08 95       	ret
	}
	PORTB = 0b11110111;
 22c:	87 ef       	ldi	r24, 0xF7	; 247
 22e:	88 bb       	out	0x18, r24	; 24
	
	if ((PINB & (1<<PINB4)) ==0)//C
 230:	b4 99       	sbic	0x16, 4	; 22
 232:	09 c0       	rjmp	.+18     	; 0x246 <keypad+0x116>
 234:	8f e2       	ldi	r24, 0x2F	; 47
 236:	95 e7       	ldi	r25, 0x75	; 117
 238:	01 97       	sbiw	r24, 0x01	; 1
 23a:	f1 f7       	brne	.-4      	; 0x238 <keypad+0x108>
 23c:	00 c0       	rjmp	.+0      	; 0x23e <keypad+0x10e>
 23e:	00 00       	nop
	{
		_delay_ms(15);
		lcd_init();
 240:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
 244:	1e c0       	rjmp	.+60     	; 0x282 <keypad+0x152>
	}
	else if((PINB & (1<<PINB5)) ==0)
 246:	b5 99       	sbic	0x16, 5	; 22
 248:	08 c0       	rjmp	.+16     	; 0x25a <keypad+0x12a>
 24a:	8f e2       	ldi	r24, 0x2F	; 47
 24c:	95 e7       	ldi	r25, 0x75	; 117
 24e:	01 97       	sbiw	r24, 0x01	; 1
 250:	f1 f7       	brne	.-4      	; 0x24e <keypad+0x11e>
 252:	00 c0       	rjmp	.+0      	; 0x254 <keypad+0x124>
 254:	00 00       	nop
	{
		_delay_ms(15);
		return '0';
 256:	80 e3       	ldi	r24, 0x30	; 48
 258:	08 95       	ret
	}
	else if((PINB & (1<<PINB6)) ==0)
 25a:	b6 99       	sbic	0x16, 6	; 22
 25c:	08 c0       	rjmp	.+16     	; 0x26e <keypad+0x13e>
 25e:	8f e2       	ldi	r24, 0x2F	; 47
 260:	95 e7       	ldi	r25, 0x75	; 117
 262:	01 97       	sbiw	r24, 0x01	; 1
 264:	f1 f7       	brne	.-4      	; 0x262 <keypad+0x132>
 266:	00 c0       	rjmp	.+0      	; 0x268 <keypad+0x138>
 268:	00 00       	nop
	{
		_delay_ms(15);
		return '=';
 26a:	8d e3       	ldi	r24, 0x3D	; 61
 26c:	08 95       	ret
	}
	else if((PINB & (1<<PINB7)) ==0)///+
 26e:	b7 99       	sbic	0x16, 7	; 22
 270:	08 c0       	rjmp	.+16     	; 0x282 <keypad+0x152>
 272:	8f e2       	ldi	r24, 0x2F	; 47
 274:	95 e7       	ldi	r25, 0x75	; 117
 276:	01 97       	sbiw	r24, 0x01	; 1
 278:	f1 f7       	brne	.-4      	; 0x276 <keypad+0x146>
 27a:	00 c0       	rjmp	.+0      	; 0x27c <keypad+0x14c>
 27c:	00 00       	nop
	{
		_delay_ms(15);
		return '+';
 27e:	8b e2       	ldi	r24, 0x2B	; 43
 280:	08 95       	ret
	}
	
}
 282:	08 95       	ret

00000284 <lcddata>:
	lcdcmd(0X01);
	_delay_ms(2);
}

void lcddata(unsigned char data){
	PORTC |= (1<<RS);
 284:	95 b3       	in	r25, 0x15	; 21
 286:	90 68       	ori	r25, 0x80	; 128
 288:	95 bb       	out	0x15, r25	; 21
	LCD = data & 0XF0;//CHECK
 28a:	98 2f       	mov	r25, r24
 28c:	90 7f       	andi	r25, 0xF0	; 240
 28e:	92 bb       	out	0x12, r25	; 18
	PORTC |= (1<<EN);
 290:	95 b3       	in	r25, 0x15	; 21
 292:	90 64       	ori	r25, 0x40	; 64
 294:	95 bb       	out	0x15, r25	; 21
 296:	ef ec       	ldi	r30, 0xCF	; 207
 298:	f7 e0       	ldi	r31, 0x07	; 7
 29a:	31 97       	sbiw	r30, 0x01	; 1
 29c:	f1 f7       	brne	.-4      	; 0x29a <lcddata+0x16>
 29e:	00 c0       	rjmp	.+0      	; 0x2a0 <lcddata+0x1c>
 2a0:	00 00       	nop
	_delay_ms(1);
	PORTC &= ~(1<<EN);
 2a2:	95 b3       	in	r25, 0x15	; 21
 2a4:	9f 7b       	andi	r25, 0xBF	; 191
 2a6:	95 bb       	out	0x15, r25	; 21
	
	LCD = data<<4;
 2a8:	82 95       	swap	r24
 2aa:	80 7f       	andi	r24, 0xF0	; 240
 2ac:	82 bb       	out	0x12, r24	; 18
	PORTC |= (1<<EN);
 2ae:	85 b3       	in	r24, 0x15	; 21
 2b0:	80 64       	ori	r24, 0x40	; 64
 2b2:	85 bb       	out	0x15, r24	; 21
 2b4:	8f ec       	ldi	r24, 0xCF	; 207
 2b6:	97 e0       	ldi	r25, 0x07	; 7
 2b8:	01 97       	sbiw	r24, 0x01	; 1
 2ba:	f1 f7       	brne	.-4      	; 0x2b8 <lcddata+0x34>
 2bc:	00 c0       	rjmp	.+0      	; 0x2be <lcddata+0x3a>
 2be:	00 00       	nop
	_delay_ms(1);
	PORTC &= ~(1<<EN);
 2c0:	85 b3       	in	r24, 0x15	; 21
 2c2:	8f 7b       	andi	r24, 0xBF	; 191
 2c4:	85 bb       	out	0x15, r24	; 21
 2c6:	08 95       	ret

000002c8 <lcd_print>:
}

void lcd_print(char *str)
{
 2c8:	0f 93       	push	r16
 2ca:	1f 93       	push	r17
 2cc:	cf 93       	push	r28
 2ce:	8c 01       	movw	r16, r24
	unsigned char i =0;
 2d0:	c0 e0       	ldi	r28, 0x00	; 0
	while (str[i]!=0){
 2d2:	03 c0       	rjmp	.+6      	; 0x2da <lcd_print+0x12>
		lcddata(str[i]);
 2d4:	0e 94 42 01 	call	0x284	; 0x284 <lcddata>
		i++;
 2d8:	cf 5f       	subi	r28, 0xFF	; 255
}

void lcd_print(char *str)
{
	unsigned char i =0;
	while (str[i]!=0){
 2da:	f8 01       	movw	r30, r16
 2dc:	ec 0f       	add	r30, r28
 2de:	f1 1d       	adc	r31, r1
 2e0:	80 81       	ld	r24, Z
 2e2:	81 11       	cpse	r24, r1
 2e4:	f7 cf       	rjmp	.-18     	; 0x2d4 <lcd_print+0xc>
		lcddata(str[i]);
		i++;
	}
}
 2e6:	cf 91       	pop	r28
 2e8:	1f 91       	pop	r17
 2ea:	0f 91       	pop	r16
 2ec:	08 95       	ret

000002ee <Solenoid>:



int Solenoid(unsigned char oil1,int measure)
{
	DDRD = 0x1F;	   //make PORTD0 to PORTD4 as outputs
 2ee:	9f e1       	ldi	r25, 0x1F	; 31
 2f0:	91 bb       	out	0x11, r25	; 17
	int time=0;
	
	while (1)
	{
		switch(oil1)
 2f2:	82 33       	cpi	r24, 0x32	; 50
 2f4:	d9 f0       	breq	.+54     	; 0x32c <Solenoid+0x3e>
 2f6:	18 f4       	brcc	.+6      	; 0x2fe <Solenoid+0x10>
 2f8:	81 33       	cpi	r24, 0x31	; 49
 2fa:	39 f0       	breq	.+14     	; 0x30a <Solenoid+0x1c>
 2fc:	64 c0       	rjmp	.+200    	; 0x3c6 <Solenoid+0xd8>
 2fe:	83 33       	cpi	r24, 0x33	; 51
 300:	69 f1       	breq	.+90     	; 0x35c <Solenoid+0x6e>
 302:	84 33       	cpi	r24, 0x34	; 52
 304:	09 f4       	brne	.+2      	; 0x308 <Solenoid+0x1a>
 306:	45 c0       	rjmp	.+138    	; 0x392 <Solenoid+0xa4>
 308:	5e c0       	rjmp	.+188    	; 0x3c6 <Solenoid+0xd8>
		{
			case '1':
				PORTD = PORTD | (1<<0);
 30a:	82 b3       	in	r24, 0x12	; 18
 30c:	81 60       	ori	r24, 0x01	; 1
 30e:	82 bb       	out	0x12, r24	; 18
				time = 50;
 310:	82 e3       	ldi	r24, 0x32	; 50
 312:	90 e0       	ldi	r25, 0x00	; 0
				while(!(time==0))
 314:	07 c0       	rjmp	.+14     	; 0x324 <Solenoid+0x36>
 316:	ef e1       	ldi	r30, 0x1F	; 31
 318:	fe e4       	ldi	r31, 0x4E	; 78
 31a:	31 97       	sbiw	r30, 0x01	; 1
 31c:	f1 f7       	brne	.-4      	; 0x31a <Solenoid+0x2c>
 31e:	00 c0       	rjmp	.+0      	; 0x320 <Solenoid+0x32>
 320:	00 00       	nop
				{
					_delay_ms(10);
					time --;
 322:	01 97       	sbiw	r24, 0x01	; 1
		switch(oil1)
		{
			case '1':
				PORTD = PORTD | (1<<0);
				time = 50;
				while(!(time==0))
 324:	00 97       	sbiw	r24, 0x00	; 0
 326:	b9 f7       	brne	.-18     	; 0x316 <Solenoid+0x28>
				{
					_delay_ms(10);
					time --;
				}
				PORTD = 0x00;
 328:	12 ba       	out	0x12, r1	; 18
				break;
 32a:	4d c0       	rjmp	.+154    	; 0x3c6 <Solenoid+0xd8>
			case '2':
				PORTD = PORTD | (1<<1);
 32c:	82 b3       	in	r24, 0x12	; 18
 32e:	82 60       	ori	r24, 0x02	; 2
 330:	82 bb       	out	0x12, r24	; 18
				time = measure*5*lqd2;
 332:	cb 01       	movw	r24, r22
 334:	88 0f       	add	r24, r24
 336:	99 1f       	adc	r25, r25
 338:	88 0f       	add	r24, r24
 33a:	99 1f       	adc	r25, r25
 33c:	68 0f       	add	r22, r24
 33e:	79 1f       	adc	r23, r25
				while(time>0)
 340:	08 c0       	rjmp	.+16     	; 0x352 <Solenoid+0x64>
 342:	8f e1       	ldi	r24, 0x1F	; 31
 344:	9e e4       	ldi	r25, 0x4E	; 78
 346:	01 97       	sbiw	r24, 0x01	; 1
 348:	f1 f7       	brne	.-4      	; 0x346 <Solenoid+0x58>
 34a:	00 c0       	rjmp	.+0      	; 0x34c <Solenoid+0x5e>
 34c:	00 00       	nop
				{
					_delay_ms(10);
					time --;
 34e:	61 50       	subi	r22, 0x01	; 1
 350:	71 09       	sbc	r23, r1
				PORTD = 0x00;
				break;
			case '2':
				PORTD = PORTD | (1<<1);
				time = measure*5*lqd2;
				while(time>0)
 352:	16 16       	cp	r1, r22
 354:	17 06       	cpc	r1, r23
 356:	ac f3       	brlt	.-22     	; 0x342 <Solenoid+0x54>
				{
					_delay_ms(10);
					time --;
				}
				PORTD = 0x00;
 358:	12 ba       	out	0x12, r1	; 18
				break;
 35a:	35 c0       	rjmp	.+106    	; 0x3c6 <Solenoid+0xd8>
			case '3':
				PORTD = PORTD | (1<<2);
 35c:	82 b3       	in	r24, 0x12	; 18
 35e:	84 60       	ori	r24, 0x04	; 4
 360:	82 bb       	out	0x12, r24	; 18
				time = measure*5*lqd3;
 362:	cb 01       	movw	r24, r22
 364:	88 0f       	add	r24, r24
 366:	99 1f       	adc	r25, r25
 368:	88 0f       	add	r24, r24
 36a:	99 1f       	adc	r25, r25
 36c:	68 0f       	add	r22, r24
 36e:	79 1f       	adc	r23, r25
				while(time>0)
 370:	0b c0       	rjmp	.+22     	; 0x388 <Solenoid+0x9a>
 372:	9f ef       	ldi	r25, 0xFF	; 255
 374:	e9 e6       	ldi	r30, 0x69	; 105
 376:	f8 e1       	ldi	r31, 0x18	; 24
 378:	91 50       	subi	r25, 0x01	; 1
 37a:	e0 40       	sbci	r30, 0x00	; 0
 37c:	f0 40       	sbci	r31, 0x00	; 0
 37e:	e1 f7       	brne	.-8      	; 0x378 <Solenoid+0x8a>
 380:	00 c0       	rjmp	.+0      	; 0x382 <Solenoid+0x94>
 382:	00 00       	nop
				{
					_delay_ms(1000);
					time--;
 384:	61 50       	subi	r22, 0x01	; 1
 386:	71 09       	sbc	r23, r1
				PORTD = 0x00;
				break;
			case '3':
				PORTD = PORTD | (1<<2);
				time = measure*5*lqd3;
				while(time>0)
 388:	16 16       	cp	r1, r22
 38a:	17 06       	cpc	r1, r23
 38c:	94 f3       	brlt	.-28     	; 0x372 <Solenoid+0x84>
				{
					_delay_ms(1000);
					time--;
				}
				PORTD = 0x00;
 38e:	12 ba       	out	0x12, r1	; 18
				break;
 390:	1a c0       	rjmp	.+52     	; 0x3c6 <Solenoid+0xd8>
			case '4':
				PORTD = PORTD | (1<<3);
 392:	82 b3       	in	r24, 0x12	; 18
 394:	88 60       	ori	r24, 0x08	; 8
 396:	82 bb       	out	0x12, r24	; 18
				time = measure*5*lqd4;
 398:	cb 01       	movw	r24, r22
 39a:	88 0f       	add	r24, r24
 39c:	99 1f       	adc	r25, r25
 39e:	88 0f       	add	r24, r24
 3a0:	99 1f       	adc	r25, r25
 3a2:	68 0f       	add	r22, r24
 3a4:	79 1f       	adc	r23, r25
				while(time>0)
 3a6:	0b c0       	rjmp	.+22     	; 0x3be <Solenoid+0xd0>
 3a8:	2f ef       	ldi	r18, 0xFF	; 255
 3aa:	89 e6       	ldi	r24, 0x69	; 105
 3ac:	98 e1       	ldi	r25, 0x18	; 24
 3ae:	21 50       	subi	r18, 0x01	; 1
 3b0:	80 40       	sbci	r24, 0x00	; 0
 3b2:	90 40       	sbci	r25, 0x00	; 0
 3b4:	e1 f7       	brne	.-8      	; 0x3ae <Solenoid+0xc0>
 3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <Solenoid+0xca>
 3b8:	00 00       	nop
				{
					_delay_ms(1000);
					time--;
 3ba:	61 50       	subi	r22, 0x01	; 1
 3bc:	71 09       	sbc	r23, r1
				PORTD = 0x00;
				break;
			case '4':
				PORTD = PORTD | (1<<3);
				time = measure*5*lqd4;
				while(time>0)
 3be:	16 16       	cp	r1, r22
 3c0:	17 06       	cpc	r1, r23
 3c2:	94 f3       	brlt	.-28     	; 0x3a8 <Solenoid+0xba>
				{
					_delay_ms(1000);
					time--;
				}
				PORTD = 0x00;
 3c4:	12 ba       	out	0x12, r1	; 18
		}
		
		return 0;
	}
	
}
 3c6:	80 e0       	ldi	r24, 0x00	; 0
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	08 95       	ret

000003cc <main>:
#include "display.c"
#include "solenoid.c"


int main(void)
{
 3cc:	0f 93       	push	r16
 3ce:	1f 93       	push	r17
 3d0:	cf 93       	push	r28
 3d2:	df 93       	push	r29
 3d4:	cd b7       	in	r28, 0x3d	; 61
 3d6:	de b7       	in	r29, 0x3e	; 62
 3d8:	60 97       	sbiw	r28, 0x10	; 16
 3da:	0f b6       	in	r0, 0x3f	; 63
 3dc:	f8 94       	cli
 3de:	de bf       	out	0x3e, r29	; 62
 3e0:	0f be       	out	0x3f, r0	; 63
 3e2:	cd bf       	out	0x3d, r28	; 61
	//DDRA|=(1<<Load_clk); //Load cell clock pin
	//PORTA&=~(1<<Load_clk);//Clock pin low
	
	DDRC |= (11<<6);
 3e4:	84 b3       	in	r24, 0x14	; 20
 3e6:	80 6c       	ori	r24, 0xC0	; 192
 3e8:	84 bb       	out	0x14, r24	; 20

	
	
	unsigned char x;
	DDRB = 0X0F;
 3ea:	8f e0       	ldi	r24, 0x0F	; 15
 3ec:	87 bb       	out	0x17, r24	; 23
	
	unsigned char W_array[8];
	//memset(W_array,0,8);
	while(1)
	{
		while(i<10)
 3ee:	76 c1       	rjmp	.+748    	; 0x6dc <__EEPROM_REGION_LENGTH__+0x2dc>
		{
			PORTB = 0XF0;
			lcd_init();
			lcd_print("Enter patientID:");
			while(!(PINB!= 0XF0));
 3f0:	86 b3       	in	r24, 0x16	; 22
 3f2:	80 3f       	cpi	r24, 0xF0	; 240
 3f4:	e9 f3       	breq	.-6      	; 0x3f0 <main+0x24>
			if (PINB!= 0XF0)
 3f6:	86 b3       	in	r24, 0x16	; 22
 3f8:	80 3f       	cpi	r24, 0xF0	; 240
 3fa:	19 f0       	breq	.+6      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
			{
				W_array[0] = keypad();
 3fc:	0e 94 98 00 	call	0x130	; 0x130 <keypad>
 400:	89 83       	std	Y+1, r24	; 0x01
			}
			lcd_init();
 402:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcddata(W_array[0]);
 406:	89 81       	ldd	r24, Y+1	; 0x01
 408:	0e 94 42 01 	call	0x284	; 0x284 <lcddata>
 40c:	2f e7       	ldi	r18, 0x7F	; 127
 40e:	88 e3       	ldi	r24, 0x38	; 56
 410:	91 e0       	ldi	r25, 0x01	; 1
 412:	21 50       	subi	r18, 0x01	; 1
 414:	80 40       	sbci	r24, 0x00	; 0
 416:	90 40       	sbci	r25, 0x00	; 0
 418:	e1 f7       	brne	.-8      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 41a:	00 c0       	rjmp	.+0      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 41c:	00 00       	nop
			_delay_ms(50);
			lcd_init();
 41e:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			PORTB=0XF0;
 422:	80 ef       	ldi	r24, 0xF0	; 240
 424:	88 bb       	out	0x18, r24	; 24
			
			lcd_print("oil1 ml(*5):");
 426:	80 e6       	ldi	r24, 0x60	; 96
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
			while(!(PINB!= 0XF0));
 42e:	86 b3       	in	r24, 0x16	; 22
 430:	80 3f       	cpi	r24, 0xF0	; 240
 432:	e9 f3       	breq	.-6      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
			if (PINB!= 0XF0)
 434:	86 b3       	in	r24, 0x16	; 22
 436:	80 3f       	cpi	r24, 0xF0	; 240
 438:	19 f0       	breq	.+6      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
			{
				W_array[1] = keypad();
 43a:	0e 94 98 00 	call	0x130	; 0x130 <keypad>
 43e:	8a 83       	std	Y+2, r24	; 0x02
			}
			lcd_init();
 440:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcddata(W_array[1]);
 444:	8a 81       	ldd	r24, Y+2	; 0x02
 446:	0e 94 42 01 	call	0x284	; 0x284 <lcddata>
 44a:	ef e7       	ldi	r30, 0x7F	; 127
 44c:	f8 e3       	ldi	r31, 0x38	; 56
 44e:	21 e0       	ldi	r18, 0x01	; 1
 450:	e1 50       	subi	r30, 0x01	; 1
 452:	f0 40       	sbci	r31, 0x00	; 0
 454:	20 40       	sbci	r18, 0x00	; 0
 456:	e1 f7       	brne	.-8      	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 458:	00 c0       	rjmp	.+0      	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 45a:	00 00       	nop
			_delay_ms(50);
			lcd_init();
 45c:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			PORTB=0XF0;
 460:	80 ef       	ldi	r24, 0xF0	; 240
 462:	88 bb       	out	0x18, r24	; 24
			
			lcd_print("oil2 ml(*5):");
 464:	8d e6       	ldi	r24, 0x6D	; 109
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
			while(!(PINB!= 0XF0));
 46c:	86 b3       	in	r24, 0x16	; 22
 46e:	80 3f       	cpi	r24, 0xF0	; 240
 470:	e9 f3       	breq	.-6      	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
			if (PINB!= 0XF0)
 472:	86 b3       	in	r24, 0x16	; 22
 474:	80 3f       	cpi	r24, 0xF0	; 240
 476:	19 f0       	breq	.+6      	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
			{
				W_array[2] = keypad();
 478:	0e 94 98 00 	call	0x130	; 0x130 <keypad>
 47c:	8b 83       	std	Y+3, r24	; 0x03
			}
			lcd_init();
 47e:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcddata(W_array[2]);
 482:	8b 81       	ldd	r24, Y+3	; 0x03
 484:	0e 94 42 01 	call	0x284	; 0x284 <lcddata>
 488:	8f e7       	ldi	r24, 0x7F	; 127
 48a:	98 e3       	ldi	r25, 0x38	; 56
 48c:	e1 e0       	ldi	r30, 0x01	; 1
 48e:	81 50       	subi	r24, 0x01	; 1
 490:	90 40       	sbci	r25, 0x00	; 0
 492:	e0 40       	sbci	r30, 0x00	; 0
 494:	e1 f7       	brne	.-8      	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 496:	00 c0       	rjmp	.+0      	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
 498:	00 00       	nop
			_delay_ms(50);
			lcd_init();
 49a:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			PORTB=0XF0;
 49e:	80 ef       	ldi	r24, 0xF0	; 240
 4a0:	88 bb       	out	0x18, r24	; 24

			lcd_print("oil 3 ml(*5):");
 4a2:	8a e7       	ldi	r24, 0x7A	; 122
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
			while(!(PINB!= 0XF0));
 4aa:	86 b3       	in	r24, 0x16	; 22
 4ac:	80 3f       	cpi	r24, 0xF0	; 240
 4ae:	e9 f3       	breq	.-6      	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
			if (PINB!= 0XF0)
 4b0:	86 b3       	in	r24, 0x16	; 22
 4b2:	80 3f       	cpi	r24, 0xF0	; 240
 4b4:	19 f0       	breq	.+6      	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
			{
				W_array[3] = keypad();
 4b6:	0e 94 98 00 	call	0x130	; 0x130 <keypad>
 4ba:	8c 83       	std	Y+4, r24	; 0x04
			}
			lcd_init();
 4bc:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcddata(W_array[3]);
 4c0:	8c 81       	ldd	r24, Y+4	; 0x04
 4c2:	0e 94 42 01 	call	0x284	; 0x284 <lcddata>
 4c6:	ff e7       	ldi	r31, 0x7F	; 127
 4c8:	28 e3       	ldi	r18, 0x38	; 56
 4ca:	81 e0       	ldi	r24, 0x01	; 1
 4cc:	f1 50       	subi	r31, 0x01	; 1
 4ce:	20 40       	sbci	r18, 0x00	; 0
 4d0:	80 40       	sbci	r24, 0x00	; 0
 4d2:	e1 f7       	brne	.-8      	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
 4d4:	00 c0       	rjmp	.+0      	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 4d6:	00 00       	nop
			_delay_ms(50);
			lcd_init();
 4d8:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			PORTB=0XF0;
 4dc:	80 ef       	ldi	r24, 0xF0	; 240
 4de:	88 bb       	out	0x18, r24	; 24
			
			lcd_print("oil 4 ml(*5):");
 4e0:	88 e8       	ldi	r24, 0x88	; 136
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
			while(!(PINB!= 0XF0));
 4e8:	86 b3       	in	r24, 0x16	; 22
 4ea:	80 3f       	cpi	r24, 0xF0	; 240
 4ec:	e9 f3       	breq	.-6      	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
			if (PINB!= 0XF0)
 4ee:	86 b3       	in	r24, 0x16	; 22
 4f0:	80 3f       	cpi	r24, 0xF0	; 240
 4f2:	19 f0       	breq	.+6      	; 0x4fa <__EEPROM_REGION_LENGTH__+0xfa>
			{
				W_array[4] = keypad();
 4f4:	0e 94 98 00 	call	0x130	; 0x130 <keypad>
 4f8:	8d 83       	std	Y+5, r24	; 0x05
			}
			lcd_init();
 4fa:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcddata(W_array[4]);
 4fe:	8d 81       	ldd	r24, Y+5	; 0x05
 500:	0e 94 42 01 	call	0x284	; 0x284 <lcddata>
 504:	9f e7       	ldi	r25, 0x7F	; 127
 506:	e8 e3       	ldi	r30, 0x38	; 56
 508:	f1 e0       	ldi	r31, 0x01	; 1
 50a:	91 50       	subi	r25, 0x01	; 1
 50c:	e0 40       	sbci	r30, 0x00	; 0
 50e:	f0 40       	sbci	r31, 0x00	; 0
 510:	e1 f7       	brne	.-8      	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
 512:	00 c0       	rjmp	.+0      	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
 514:	00 00       	nop
			_delay_ms(50);
			lcd_init();
 516:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			PORTB=0XF0;
 51a:	80 ef       	ldi	r24, 0xF0	; 240
 51c:	88 bb       	out	0x18, r24	; 24
			
			lcd_print("Drawer1 no.pills:");
 51e:	86 e9       	ldi	r24, 0x96	; 150
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
			while(!(PINB!= 0XF0));
 526:	86 b3       	in	r24, 0x16	; 22
 528:	80 3f       	cpi	r24, 0xF0	; 240
 52a:	e9 f3       	breq	.-6      	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
			if (PINB!= 0XF0)
 52c:	86 b3       	in	r24, 0x16	; 22
 52e:	80 3f       	cpi	r24, 0xF0	; 240
 530:	19 f0       	breq	.+6      	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
			{
				W_array[5] = keypad();
 532:	0e 94 98 00 	call	0x130	; 0x130 <keypad>
 536:	8e 83       	std	Y+6, r24	; 0x06
			}
			lcd_init();
 538:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcddata(W_array[5]);
 53c:	8e 81       	ldd	r24, Y+6	; 0x06
 53e:	0e 94 42 01 	call	0x284	; 0x284 <lcddata>
 542:	2f e7       	ldi	r18, 0x7F	; 127
 544:	88 e3       	ldi	r24, 0x38	; 56
 546:	91 e0       	ldi	r25, 0x01	; 1
 548:	21 50       	subi	r18, 0x01	; 1
 54a:	80 40       	sbci	r24, 0x00	; 0
 54c:	90 40       	sbci	r25, 0x00	; 0
 54e:	e1 f7       	brne	.-8      	; 0x548 <__EEPROM_REGION_LENGTH__+0x148>
 550:	00 c0       	rjmp	.+0      	; 0x552 <__EEPROM_REGION_LENGTH__+0x152>
 552:	00 00       	nop
			_delay_ms(50);
			lcd_init();
 554:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			PORTB=0XF0;
 558:	80 ef       	ldi	r24, 0xF0	; 240
 55a:	88 bb       	out	0x18, r24	; 24
			
			lcd_print("Drawer2 no.pills:");
 55c:	88 ea       	ldi	r24, 0xA8	; 168
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
			while(!(PINB!= 0XF0));
 564:	86 b3       	in	r24, 0x16	; 22
 566:	80 3f       	cpi	r24, 0xF0	; 240
 568:	e9 f3       	breq	.-6      	; 0x564 <__EEPROM_REGION_LENGTH__+0x164>
			if (PINB!= 0XF0)
 56a:	86 b3       	in	r24, 0x16	; 22
 56c:	80 3f       	cpi	r24, 0xF0	; 240
 56e:	19 f0       	breq	.+6      	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
			{
				W_array[6] = keypad();
 570:	0e 94 98 00 	call	0x130	; 0x130 <keypad>
 574:	8f 83       	std	Y+7, r24	; 0x07
			}
			lcd_init();
 576:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcddata(W_array[6]);
 57a:	8f 81       	ldd	r24, Y+7	; 0x07
 57c:	0e 94 42 01 	call	0x284	; 0x284 <lcddata>
 580:	ef e7       	ldi	r30, 0x7F	; 127
 582:	f8 e3       	ldi	r31, 0x38	; 56
 584:	21 e0       	ldi	r18, 0x01	; 1
 586:	e1 50       	subi	r30, 0x01	; 1
 588:	f0 40       	sbci	r31, 0x00	; 0
 58a:	20 40       	sbci	r18, 0x00	; 0
 58c:	e1 f7       	brne	.-8      	; 0x586 <__EEPROM_REGION_LENGTH__+0x186>
 58e:	00 c0       	rjmp	.+0      	; 0x590 <__EEPROM_REGION_LENGTH__+0x190>
 590:	00 00       	nop
			_delay_ms(50);
			lcd_init();
 592:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			PORTB=0XF0;
 596:	80 ef       	ldi	r24, 0xF0	; 240
 598:	88 bb       	out	0x18, r24	; 24
			
			lcd_print("Powder yes-1no-0:");
 59a:	8a eb       	ldi	r24, 0xBA	; 186
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
			while(!(PINB!= 0XF0));
 5a2:	86 b3       	in	r24, 0x16	; 22
 5a4:	80 3f       	cpi	r24, 0xF0	; 240
 5a6:	e9 f3       	breq	.-6      	; 0x5a2 <__EEPROM_REGION_LENGTH__+0x1a2>
			if (PINB!= 0XF0)
 5a8:	86 b3       	in	r24, 0x16	; 22
 5aa:	80 3f       	cpi	r24, 0xF0	; 240
 5ac:	19 f0       	breq	.+6      	; 0x5b4 <__EEPROM_REGION_LENGTH__+0x1b4>
			{
				W_array[7] = keypad();
 5ae:	0e 94 98 00 	call	0x130	; 0x130 <keypad>
 5b2:	88 87       	std	Y+8, r24	; 0x08
			}
			lcd_init();
 5b4:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcddata(W_array[7]);
 5b8:	88 85       	ldd	r24, Y+8	; 0x08
 5ba:	0e 94 42 01 	call	0x284	; 0x284 <lcddata>
 5be:	8f e7       	ldi	r24, 0x7F	; 127
 5c0:	98 e3       	ldi	r25, 0x38	; 56
 5c2:	e1 e0       	ldi	r30, 0x01	; 1
 5c4:	81 50       	subi	r24, 0x01	; 1
 5c6:	90 40       	sbci	r25, 0x00	; 0
 5c8:	e0 40       	sbci	r30, 0x00	; 0
 5ca:	e1 f7       	brne	.-8      	; 0x5c4 <__EEPROM_REGION_LENGTH__+0x1c4>
 5cc:	00 c0       	rjmp	.+0      	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 5ce:	00 00       	nop
			_delay_ms(50);
			lcd_init();
 5d0:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			PORTB=0XF0;
 5d4:	80 ef       	ldi	r24, 0xF0	; 240
 5d6:	88 bb       	out	0x18, r24	; 24
			
			position=0;
			switch(W_array[0])
 5d8:	e9 81       	ldd	r30, Y+1	; 0x01
 5da:	8e 2f       	mov	r24, r30
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	fc 01       	movw	r30, r24
 5e0:	f1 97       	sbiw	r30, 0x31	; 49
 5e2:	e9 30       	cpi	r30, 0x09	; 9
 5e4:	f1 05       	cpc	r31, r1
 5e6:	20 f4       	brcc	.+8      	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
 5e8:	e6 5d       	subi	r30, 0xD6	; 214
 5ea:	ff 4f       	sbci	r31, 0xFF	; 255
 5ec:	0c 94 e6 04 	jmp	0x9cc	; 0x9cc <__tablejump2__>
			lcddata(W_array[7]);
			_delay_ms(50);
			lcd_init();
			PORTB=0XF0;
			
			position=0;
 5f0:	60 e0       	ldi	r22, 0x00	; 0
 5f2:	70 e0       	ldi	r23, 0x00	; 0
 5f4:	1a c0       	rjmp	.+52     	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
				break;
				case '1':
				position =8;
				break;
				case '2':
				position =16;
 5f6:	60 e1       	ldi	r22, 0x10	; 16
 5f8:	70 e0       	ldi	r23, 0x00	; 0
				break;
 5fa:	17 c0       	rjmp	.+46     	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
				case '3':
				position =24;
 5fc:	68 e1       	ldi	r22, 0x18	; 24
 5fe:	70 e0       	ldi	r23, 0x00	; 0
				break;
 600:	14 c0       	rjmp	.+40     	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
				case '4':
				position =32;
 602:	60 e2       	ldi	r22, 0x20	; 32
 604:	70 e0       	ldi	r23, 0x00	; 0
				break;
 606:	11 c0       	rjmp	.+34     	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
				case '5':
				position =40;
 608:	68 e2       	ldi	r22, 0x28	; 40
 60a:	70 e0       	ldi	r23, 0x00	; 0
				break;
 60c:	0e c0       	rjmp	.+28     	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
				case '6':
				position =48;
 60e:	60 e3       	ldi	r22, 0x30	; 48
 610:	70 e0       	ldi	r23, 0x00	; 0
				break;
 612:	0b c0       	rjmp	.+22     	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
				case '7':
				position =56;
 614:	68 e3       	ldi	r22, 0x38	; 56
 616:	70 e0       	ldi	r23, 0x00	; 0
				break;
 618:	08 c0       	rjmp	.+16     	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
				case '8':
				position =40;
 61a:	68 e2       	ldi	r22, 0x28	; 40
 61c:	70 e0       	ldi	r23, 0x00	; 0
				break;
 61e:	05 c0       	rjmp	.+10     	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
				case '9':
				position =40;
 620:	68 e2       	ldi	r22, 0x28	; 40
 622:	70 e0       	ldi	r23, 0x00	; 0
				break;
 624:	02 c0       	rjmp	.+4      	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
			{
				case '0':
				position =0;
				break;
				case '1':
				position =8;
 626:	68 e0       	ldi	r22, 0x08	; 8
 628:	70 e0       	ldi	r23, 0x00	; 0
				case '9':
				position =40;
				break;
			};
			
			eeprom_write_block(W_array,position,strlen(W_array));
 62a:	ce 01       	movw	r24, r28
 62c:	01 96       	adiw	r24, 0x01	; 1
 62e:	fc 01       	movw	r30, r24
 630:	01 90       	ld	r0, Z+
 632:	00 20       	and	r0, r0
 634:	e9 f7       	brne	.-6      	; 0x630 <__EEPROM_REGION_LENGTH__+0x230>
 636:	31 97       	sbiw	r30, 0x01	; 1
 638:	af 01       	movw	r20, r30
 63a:	48 1b       	sub	r20, r24
 63c:	59 0b       	sbc	r21, r25
 63e:	0e 94 22 05 	call	0xa44	; 0xa44 <eeprom_write_block>
			
			unsigned char condition;
			lcd_print("Do you need");
 642:	8c ec       	ldi	r24, 0xCC	; 204
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
 64a:	8f e3       	ldi	r24, 0x3F	; 63
 64c:	9c e9       	ldi	r25, 0x9C	; 156
 64e:	01 97       	sbiw	r24, 0x01	; 1
 650:	f1 f7       	brne	.-4      	; 0x64e <__EEPROM_REGION_LENGTH__+0x24e>
 652:	00 c0       	rjmp	.+0      	; 0x654 <__EEPROM_REGION_LENGTH__+0x254>
 654:	00 00       	nop
			_delay_ms(20);
			lcd_init();
 656:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcd_print("to add");
 65a:	88 ed       	ldi	r24, 0xD8	; 216
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
 662:	ef e3       	ldi	r30, 0x3F	; 63
 664:	fc e9       	ldi	r31, 0x9C	; 156
 666:	31 97       	sbiw	r30, 0x01	; 1
 668:	f1 f7       	brne	.-4      	; 0x666 <__EEPROM_REGION_LENGTH__+0x266>
 66a:	00 c0       	rjmp	.+0      	; 0x66c <__EEPROM_REGION_LENGTH__+0x26c>
 66c:	00 00       	nop
			_delay_ms(20);
			lcd_init();
 66e:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcd_print("more record?");
 672:	8f ed       	ldi	r24, 0xDF	; 223
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
 67a:	8f e3       	ldi	r24, 0x3F	; 63
 67c:	9c e9       	ldi	r25, 0x9C	; 156
 67e:	01 97       	sbiw	r24, 0x01	; 1
 680:	f1 f7       	brne	.-4      	; 0x67e <__EEPROM_REGION_LENGTH__+0x27e>
 682:	00 c0       	rjmp	.+0      	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
 684:	00 00       	nop
			_delay_ms(20);
			lcd_init();
 686:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcd_print("Yes-1 No-0");
 68a:	8c ee       	ldi	r24, 0xEC	; 236
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
 692:	ef e3       	ldi	r30, 0x3F	; 63
 694:	fc e9       	ldi	r31, 0x9C	; 156
 696:	31 97       	sbiw	r30, 0x01	; 1
 698:	f1 f7       	brne	.-4      	; 0x696 <__EEPROM_REGION_LENGTH__+0x296>
 69a:	00 c0       	rjmp	.+0      	; 0x69c <__EEPROM_REGION_LENGTH__+0x29c>
 69c:	00 00       	nop
			_delay_ms(20);
			lcd_init();
 69e:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			while(!(PINB!= 0XF0));
 6a2:	86 b3       	in	r24, 0x16	; 22
 6a4:	80 3f       	cpi	r24, 0xF0	; 240
 6a6:	e9 f3       	breq	.-6      	; 0x6a2 <__EEPROM_REGION_LENGTH__+0x2a2>
			if (PINB!= 0XF0)
 6a8:	86 b3       	in	r24, 0x16	; 22
 6aa:	80 3f       	cpi	r24, 0xF0	; 240
 6ac:	19 f0       	breq	.+6      	; 0x6b4 <__EEPROM_REGION_LENGTH__+0x2b4>
			{
				condition = keypad();
 6ae:	0e 94 98 00 	call	0x130	; 0x130 <keypad>
 6b2:	18 2f       	mov	r17, r24
			}
			lcd_init();
 6b4:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcddata(condition);
 6b8:	81 2f       	mov	r24, r17
 6ba:	0e 94 42 01 	call	0x284	; 0x284 <lcddata>
 6be:	ff e7       	ldi	r31, 0x7F	; 127
 6c0:	28 e3       	ldi	r18, 0x38	; 56
 6c2:	81 e0       	ldi	r24, 0x01	; 1
 6c4:	f1 50       	subi	r31, 0x01	; 1
 6c6:	20 40       	sbci	r18, 0x00	; 0
 6c8:	80 40       	sbci	r24, 0x00	; 0
 6ca:	e1 f7       	brne	.-8      	; 0x6c4 <__EEPROM_REGION_LENGTH__+0x2c4>
 6cc:	00 c0       	rjmp	.+0      	; 0x6ce <__EEPROM_REGION_LENGTH__+0x2ce>
 6ce:	00 00       	nop
			_delay_ms(50);
			lcd_init();
 6d0:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			PORTB=0XF0;
 6d4:	80 ef       	ldi	r24, 0xF0	; 240
 6d6:	88 bb       	out	0x18, r24	; 24
			if(condition=='0')
 6d8:	10 33       	cpi	r17, 0x30	; 48
 6da:	49 f0       	breq	.+18     	; 0x6ee <__EEPROM_REGION_LENGTH__+0x2ee>
	//memset(W_array,0,8);
	while(1)
	{
		while(i<10)
		{
			PORTB = 0XF0;
 6dc:	80 ef       	ldi	r24, 0xF0	; 240
 6de:	88 bb       	out	0x18, r24	; 24
			lcd_init();
 6e0:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcd_print("Enter patientID:");
 6e4:	87 ef       	ldi	r24, 0xF7	; 247
 6e6:	90 e0       	ldi	r25, 0x00	; 0
 6e8:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
			while(!(PINB!= 0XF0));
 6ec:	81 ce       	rjmp	.-766    	; 0x3f0 <main+0x24>
			
		}
		
		unsigned char patientID;
		
		lcd_print("To retrieve data");
 6ee:	88 e0       	ldi	r24, 0x08	; 8
 6f0:	91 e0       	ldi	r25, 0x01	; 1
 6f2:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
		lcd_init();
 6f6:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
		lcd_print("enter patientID:");
 6fa:	89 e1       	ldi	r24, 0x19	; 25
 6fc:	91 e0       	ldi	r25, 0x01	; 1
 6fe:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
		while(!(PINB!= 0XF0));
 702:	86 b3       	in	r24, 0x16	; 22
 704:	80 3f       	cpi	r24, 0xF0	; 240
 706:	e9 f3       	breq	.-6      	; 0x702 <__EEPROM_REGION_LENGTH__+0x302>
		if (PINB!= 0XF0)
 708:	86 b3       	in	r24, 0x16	; 22
 70a:	80 3f       	cpi	r24, 0xF0	; 240
 70c:	19 f0       	breq	.+6      	; 0x714 <__EEPROM_REGION_LENGTH__+0x314>
		{
			patientID = keypad();
 70e:	0e 94 98 00 	call	0x130	; 0x130 <keypad>
 712:	08 2f       	mov	r16, r24
		}
		lcd_init();
 714:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
		lcddata(patientID);
 718:	80 2f       	mov	r24, r16
 71a:	0e 94 42 01 	call	0x284	; 0x284 <lcddata>
 71e:	9f e7       	ldi	r25, 0x7F	; 127
 720:	e8 e3       	ldi	r30, 0x38	; 56
 722:	f1 e0       	ldi	r31, 0x01	; 1
 724:	91 50       	subi	r25, 0x01	; 1
 726:	e0 40       	sbci	r30, 0x00	; 0
 728:	f0 40       	sbci	r31, 0x00	; 0
 72a:	e1 f7       	brne	.-8      	; 0x724 <__EEPROM_REGION_LENGTH__+0x324>
 72c:	00 c0       	rjmp	.+0      	; 0x72e <__EEPROM_REGION_LENGTH__+0x32e>
 72e:	00 00       	nop
		_delay_ms(50);
		lcd_init();
 730:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
		PORTB=0XF0;
 734:	80 ef       	ldi	r24, 0xF0	; 240
 736:	88 bb       	out	0x18, r24	; 24
		
		position = 0;
		switch(patientID)
 738:	10 e0       	ldi	r17, 0x00	; 0
 73a:	f8 01       	movw	r30, r16
 73c:	f1 97       	sbiw	r30, 0x31	; 49
 73e:	e9 30       	cpi	r30, 0x09	; 9
 740:	f1 05       	cpc	r31, r1
 742:	20 f4       	brcc	.+8      	; 0x74c <__EEPROM_REGION_LENGTH__+0x34c>
 744:	ed 5c       	subi	r30, 0xCD	; 205
 746:	ff 4f       	sbci	r31, 0xFF	; 255
 748:	0c 94 e6 04 	jmp	0x9cc	; 0x9cc <__tablejump2__>
		lcddata(patientID);
		_delay_ms(50);
		lcd_init();
		PORTB=0XF0;
		
		position = 0;
 74c:	60 e0       	ldi	r22, 0x00	; 0
 74e:	70 e0       	ldi	r23, 0x00	; 0
 750:	1a c0       	rjmp	.+52     	; 0x786 <__EEPROM_REGION_LENGTH__+0x386>
			break;
			case '1':
			position =8;
			break;
			case '2':
			position =16;
 752:	60 e1       	ldi	r22, 0x10	; 16
 754:	70 e0       	ldi	r23, 0x00	; 0
			break;
 756:	17 c0       	rjmp	.+46     	; 0x786 <__EEPROM_REGION_LENGTH__+0x386>
			case '3':
			position =24;
 758:	68 e1       	ldi	r22, 0x18	; 24
 75a:	70 e0       	ldi	r23, 0x00	; 0
			break;
 75c:	14 c0       	rjmp	.+40     	; 0x786 <__EEPROM_REGION_LENGTH__+0x386>
			case '4':
			position =32;
 75e:	60 e2       	ldi	r22, 0x20	; 32
 760:	70 e0       	ldi	r23, 0x00	; 0
			break;
 762:	11 c0       	rjmp	.+34     	; 0x786 <__EEPROM_REGION_LENGTH__+0x386>
			case '5':
			position =40;
 764:	68 e2       	ldi	r22, 0x28	; 40
 766:	70 e0       	ldi	r23, 0x00	; 0
			break;
 768:	0e c0       	rjmp	.+28     	; 0x786 <__EEPROM_REGION_LENGTH__+0x386>
			case '6':
			position =48;
 76a:	60 e3       	ldi	r22, 0x30	; 48
 76c:	70 e0       	ldi	r23, 0x00	; 0
			break;
 76e:	0b c0       	rjmp	.+22     	; 0x786 <__EEPROM_REGION_LENGTH__+0x386>
			case '7':
			position =56;
 770:	68 e3       	ldi	r22, 0x38	; 56
 772:	70 e0       	ldi	r23, 0x00	; 0
			break;
 774:	08 c0       	rjmp	.+16     	; 0x786 <__EEPROM_REGION_LENGTH__+0x386>
			case '8':
			position =40;
 776:	68 e2       	ldi	r22, 0x28	; 40
 778:	70 e0       	ldi	r23, 0x00	; 0
			break;
 77a:	05 c0       	rjmp	.+10     	; 0x786 <__EEPROM_REGION_LENGTH__+0x386>
			case '9':
			position =40;
 77c:	68 e2       	ldi	r22, 0x28	; 40
 77e:	70 e0       	ldi	r23, 0x00	; 0
			break;
 780:	02 c0       	rjmp	.+4      	; 0x786 <__EEPROM_REGION_LENGTH__+0x386>
		{
			case '0':
			position =0;
			break;
			case '1':
			position =8;
 782:	68 e0       	ldi	r22, 0x08	; 8
 784:	70 e0       	ldi	r23, 0x00	; 0
			position =40;
			break;
		};
		
		unsigned char R_array[8];
		memset(R_array,0,8);
 786:	ce 01       	movw	r24, r28
 788:	09 96       	adiw	r24, 0x09	; 9
 78a:	28 e0       	ldi	r18, 0x08	; 8
 78c:	fc 01       	movw	r30, r24
 78e:	11 92       	st	Z+, r1
 790:	2a 95       	dec	r18
 792:	e9 f7       	brne	.-6      	; 0x78e <__EEPROM_REGION_LENGTH__+0x38e>
		int measure=0;
		
		
		eeprom_read_block(R_array,position,strlen(W_array));
 794:	de 01       	movw	r26, r28
 796:	11 96       	adiw	r26, 0x01	; 1
 798:	fd 01       	movw	r30, r26
 79a:	01 90       	ld	r0, Z+
 79c:	00 20       	and	r0, r0
 79e:	e9 f7       	brne	.-6      	; 0x79a <__EEPROM_REGION_LENGTH__+0x39a>
 7a0:	31 97       	sbiw	r30, 0x01	; 1
 7a2:	af 01       	movw	r20, r30
 7a4:	4a 1b       	sub	r20, r26
 7a6:	5b 0b       	sbc	r21, r27
 7a8:	0e 94 12 05 	call	0xa24	; 0xa24 <eeprom_read_block>
		
		lcd_init();
 7ac:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
		lcd_print("PatientID:");
 7b0:	8a e2       	ldi	r24, 0x2A	; 42
 7b2:	91 e0       	ldi	r25, 0x01	; 1
 7b4:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
		lcddata(R_array[0]);
 7b8:	89 85       	ldd	r24, Y+9	; 0x09
 7ba:	0e 94 42 01 	call	0x284	; 0x284 <lcddata>
 7be:	8f e1       	ldi	r24, 0x1F	; 31
 7c0:	9e e4       	ldi	r25, 0x4E	; 78
 7c2:	01 97       	sbiw	r24, 0x01	; 1
 7c4:	f1 f7       	brne	.-4      	; 0x7c2 <__EEPROM_REGION_LENGTH__+0x3c2>
 7c6:	00 c0       	rjmp	.+0      	; 0x7c8 <__EEPROM_REGION_LENGTH__+0x3c8>
 7c8:	00 00       	nop
		_delay_ms(10);
		
		lcd_init();
 7ca:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
		lcd_print("Tube 1(*5ml):");
 7ce:	85 e3       	ldi	r24, 0x35	; 53
 7d0:	91 e0       	ldi	r25, 0x01	; 1
 7d2:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
		lcddata(R_array[1]);
 7d6:	8a 85       	ldd	r24, Y+10	; 0x0a
 7d8:	0e 94 42 01 	call	0x284	; 0x284 <lcddata>
		//measure = atoi(R_array[1]);
		measure = (int)(R_array[1]);
 7dc:	6a 85       	ldd	r22, Y+10	; 0x0a
 7de:	70 e0       	ldi	r23, 0x00	; 0
		Solenoid('1',measure);
 7e0:	81 e3       	ldi	r24, 0x31	; 49
 7e2:	0e 94 77 01 	call	0x2ee	; 0x2ee <Solenoid>
 7e6:	ef e1       	ldi	r30, 0x1F	; 31
 7e8:	fe e4       	ldi	r31, 0x4E	; 78
 7ea:	31 97       	sbiw	r30, 0x01	; 1
 7ec:	f1 f7       	brne	.-4      	; 0x7ea <__EEPROM_REGION_LENGTH__+0x3ea>
 7ee:	00 c0       	rjmp	.+0      	; 0x7f0 <__EEPROM_REGION_LENGTH__+0x3f0>
 7f0:	00 00       	nop
		_delay_ms(10);
		measure=0;
		
		lcd_init();
 7f2:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
		lcd_print("Tube 2(*5ml):");
 7f6:	83 e4       	ldi	r24, 0x43	; 67
 7f8:	91 e0       	ldi	r25, 0x01	; 1
 7fa:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
		lcddata(R_array[2]);
 7fe:	8b 85       	ldd	r24, Y+11	; 0x0b
 800:	0e 94 42 01 	call	0x284	; 0x284 <lcddata>
		measure = atoi(R_array[2]);
 804:	8b 85       	ldd	r24, Y+11	; 0x0b
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <atoi>
		Solenoid('2',measure);
 80c:	bc 01       	movw	r22, r24
 80e:	82 e3       	ldi	r24, 0x32	; 50
 810:	0e 94 77 01 	call	0x2ee	; 0x2ee <Solenoid>
 814:	8f e1       	ldi	r24, 0x1F	; 31
 816:	9e e4       	ldi	r25, 0x4E	; 78
 818:	01 97       	sbiw	r24, 0x01	; 1
 81a:	f1 f7       	brne	.-4      	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 81c:	00 c0       	rjmp	.+0      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 81e:	00 00       	nop
		_delay_ms(10);
		measure=0;
		
		lcd_init();
 820:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
		lcd_print("Tube 3(*5ml):");
 824:	81 e5       	ldi	r24, 0x51	; 81
 826:	91 e0       	ldi	r25, 0x01	; 1
 828:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
		lcddata(R_array[3]);
 82c:	8c 85       	ldd	r24, Y+12	; 0x0c
 82e:	0e 94 42 01 	call	0x284	; 0x284 <lcddata>
		measure = atoi(R_array[3]);
 832:	8c 85       	ldd	r24, Y+12	; 0x0c
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <atoi>
		Solenoid('3',measure);
 83a:	bc 01       	movw	r22, r24
 83c:	83 e3       	ldi	r24, 0x33	; 51
 83e:	0e 94 77 01 	call	0x2ee	; 0x2ee <Solenoid>
 842:	ef e1       	ldi	r30, 0x1F	; 31
 844:	fe e4       	ldi	r31, 0x4E	; 78
 846:	31 97       	sbiw	r30, 0x01	; 1
 848:	f1 f7       	brne	.-4      	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 84a:	00 c0       	rjmp	.+0      	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 84c:	00 00       	nop
		_delay_ms(10);
		measure=0;
		
		lcd_init();
 84e:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
		lcd_print("Tube 4(*5ml):");
 852:	8f e5       	ldi	r24, 0x5F	; 95
 854:	91 e0       	ldi	r25, 0x01	; 1
 856:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
		lcddata(R_array[4]);
 85a:	8d 85       	ldd	r24, Y+13	; 0x0d
 85c:	0e 94 42 01 	call	0x284	; 0x284 <lcddata>
		measure = atoi(R_array[1]);
 860:	8a 85       	ldd	r24, Y+10	; 0x0a
 862:	90 e0       	ldi	r25, 0x00	; 0
 864:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <atoi>
		Solenoid('4',measure);
 868:	bc 01       	movw	r22, r24
 86a:	84 e3       	ldi	r24, 0x34	; 52
 86c:	0e 94 77 01 	call	0x2ee	; 0x2ee <Solenoid>
 870:	8f e1       	ldi	r24, 0x1F	; 31
 872:	9e e4       	ldi	r25, 0x4E	; 78
 874:	01 97       	sbiw	r24, 0x01	; 1
 876:	f1 f7       	brne	.-4      	; 0x874 <__stack+0x15>
 878:	00 c0       	rjmp	.+0      	; 0x87a <__stack+0x1b>
 87a:	00 00       	nop
		_delay_ms(10);
		
		
		lcd_init();
 87c:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
		if(!(R_array[5]=='0'))
 880:	8e 85       	ldd	r24, Y+14	; 0x0e
 882:	80 33       	cpi	r24, 0x30	; 48
 884:	c1 f1       	breq	.+112    	; 0x8f6 <__stack+0x97>
		{
			lcd_print("Drawer1 - ");
 886:	8d e6       	ldi	r24, 0x6D	; 109
 888:	91 e0       	ldi	r25, 0x01	; 1
 88a:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
			lcddata(R_array[5]);
 88e:	8e 85       	ldd	r24, Y+14	; 0x0e
 890:	0e 94 42 01 	call	0x284	; 0x284 <lcddata>
			lcd_print(" pills");
 894:	80 ea       	ldi	r24, 0xA0	; 160
 896:	91 e0       	ldi	r25, 0x01	; 1
 898:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
 89c:	9f ef       	ldi	r25, 0xFF	; 255
 89e:	e1 ee       	ldi	r30, 0xE1	; 225
 8a0:	f4 e0       	ldi	r31, 0x04	; 4
 8a2:	91 50       	subi	r25, 0x01	; 1
 8a4:	e0 40       	sbci	r30, 0x00	; 0
 8a6:	f0 40       	sbci	r31, 0x00	; 0
 8a8:	e1 f7       	brne	.-8      	; 0x8a2 <__stack+0x43>
 8aa:	00 c0       	rjmp	.+0      	; 0x8ac <__stack+0x4d>
 8ac:	00 00       	nop
			_delay_ms(200);
			lcd_init();
 8ae:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcd_print("Please close the");
 8b2:	88 e7       	ldi	r24, 0x78	; 120
 8b4:	91 e0       	ldi	r25, 0x01	; 1
 8b6:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
 8ba:	8f e3       	ldi	r24, 0x3F	; 63
 8bc:	9c e9       	ldi	r25, 0x9C	; 156
 8be:	01 97       	sbiw	r24, 0x01	; 1
 8c0:	f1 f7       	brne	.-4      	; 0x8be <__stack+0x5f>
 8c2:	00 c0       	rjmp	.+0      	; 0x8c4 <__stack+0x65>
 8c4:	00 00       	nop
			_delay_ms(20);
			lcd_init();
 8c6:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcd_print("drawer 1 after");
 8ca:	89 e8       	ldi	r24, 0x89	; 137
 8cc:	91 e0       	ldi	r25, 0x01	; 1
 8ce:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
 8d2:	ef e3       	ldi	r30, 0x3F	; 63
 8d4:	fc e9       	ldi	r31, 0x9C	; 156
 8d6:	31 97       	sbiw	r30, 0x01	; 1
 8d8:	f1 f7       	brne	.-4      	; 0x8d6 <__stack+0x77>
 8da:	00 c0       	rjmp	.+0      	; 0x8dc <__stack+0x7d>
 8dc:	00 00       	nop
			_delay_ms(20);
			lcd_init();
 8de:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcd_print("you take pills");
 8e2:	88 e9       	ldi	r24, 0x98	; 152
 8e4:	91 e0       	ldi	r25, 0x01	; 1
 8e6:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
 8ea:	8f e3       	ldi	r24, 0x3F	; 63
 8ec:	9c e9       	ldi	r25, 0x9C	; 156
 8ee:	01 97       	sbiw	r24, 0x01	; 1
 8f0:	f1 f7       	brne	.-4      	; 0x8ee <__stack+0x8f>
 8f2:	00 c0       	rjmp	.+0      	; 0x8f4 <__stack+0x95>
 8f4:	00 00       	nop
 8f6:	ef e1       	ldi	r30, 0x1F	; 31
 8f8:	fe e4       	ldi	r31, 0x4E	; 78
 8fa:	31 97       	sbiw	r30, 0x01	; 1
 8fc:	f1 f7       	brne	.-4      	; 0x8fa <__stack+0x9b>
 8fe:	00 c0       	rjmp	.+0      	; 0x900 <__stack+0xa1>
 900:	00 00       	nop
			_delay_ms(20);
		}
		_delay_ms(10);
		
		lcd_init();
 902:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
		if(!(R_array[6]=='0'))
 906:	8f 85       	ldd	r24, Y+15	; 0x0f
 908:	80 33       	cpi	r24, 0x30	; 48
 90a:	c1 f1       	breq	.+112    	; 0x97c <__stack+0x11d>
		{
			lcd_print("Drawer2 - ");
 90c:	87 ea       	ldi	r24, 0xA7	; 167
 90e:	91 e0       	ldi	r25, 0x01	; 1
 910:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
			lcddata(R_array[6]);
 914:	8f 85       	ldd	r24, Y+15	; 0x0f
 916:	0e 94 42 01 	call	0x284	; 0x284 <lcddata>
			lcd_print(" pills");
 91a:	80 ea       	ldi	r24, 0xA0	; 160
 91c:	91 e0       	ldi	r25, 0x01	; 1
 91e:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
 922:	ff ef       	ldi	r31, 0xFF	; 255
 924:	21 ee       	ldi	r18, 0xE1	; 225
 926:	84 e0       	ldi	r24, 0x04	; 4
 928:	f1 50       	subi	r31, 0x01	; 1
 92a:	20 40       	sbci	r18, 0x00	; 0
 92c:	80 40       	sbci	r24, 0x00	; 0
 92e:	e1 f7       	brne	.-8      	; 0x928 <__stack+0xc9>
 930:	00 c0       	rjmp	.+0      	; 0x932 <__stack+0xd3>
 932:	00 00       	nop
			_delay_ms(200);
			lcd_init();
 934:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcd_print("Please close the");
 938:	88 e7       	ldi	r24, 0x78	; 120
 93a:	91 e0       	ldi	r25, 0x01	; 1
 93c:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
 940:	ef e3       	ldi	r30, 0x3F	; 63
 942:	fc e9       	ldi	r31, 0x9C	; 156
 944:	31 97       	sbiw	r30, 0x01	; 1
 946:	f1 f7       	brne	.-4      	; 0x944 <__stack+0xe5>
 948:	00 c0       	rjmp	.+0      	; 0x94a <__stack+0xeb>
 94a:	00 00       	nop
			_delay_ms(20);
			lcd_init();
 94c:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcd_print("drawer 2 after");
 950:	82 eb       	ldi	r24, 0xB2	; 178
 952:	91 e0       	ldi	r25, 0x01	; 1
 954:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
 958:	8f e3       	ldi	r24, 0x3F	; 63
 95a:	9c e9       	ldi	r25, 0x9C	; 156
 95c:	01 97       	sbiw	r24, 0x01	; 1
 95e:	f1 f7       	brne	.-4      	; 0x95c <__stack+0xfd>
 960:	00 c0       	rjmp	.+0      	; 0x962 <__stack+0x103>
 962:	00 00       	nop
			_delay_ms(20);
			lcd_init();
 964:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcd_print("you take pills");
 968:	88 e9       	ldi	r24, 0x98	; 152
 96a:	91 e0       	ldi	r25, 0x01	; 1
 96c:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
 970:	ef e3       	ldi	r30, 0x3F	; 63
 972:	fc e9       	ldi	r31, 0x9C	; 156
 974:	31 97       	sbiw	r30, 0x01	; 1
 976:	f1 f7       	brne	.-4      	; 0x974 <__stack+0x115>
 978:	00 c0       	rjmp	.+0      	; 0x97a <__stack+0x11b>
 97a:	00 00       	nop
 97c:	8f e1       	ldi	r24, 0x1F	; 31
 97e:	9e e4       	ldi	r25, 0x4E	; 78
 980:	01 97       	sbiw	r24, 0x01	; 1
 982:	f1 f7       	brne	.-4      	; 0x980 <__stack+0x121>
 984:	00 c0       	rjmp	.+0      	; 0x986 <__stack+0x127>
 986:	00 00       	nop
			_delay_ms(20);
			
		}
		_delay_ms(10);
		
		lcd_init();
 988:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
		if(!(R_array[7]=='0'))
 98c:	88 89       	ldd	r24, Y+16	; 0x10
 98e:	80 33       	cpi	r24, 0x30	; 48
 990:	21 f0       	breq	.+8      	; 0x99a <__stack+0x13b>
		{
			lcd_print("Take the powder");
 992:	81 ec       	ldi	r24, 0xC1	; 193
 994:	91 e0       	ldi	r25, 0x01	; 1
 996:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
 99a:	ef e1       	ldi	r30, 0x1F	; 31
 99c:	fe e4       	ldi	r31, 0x4E	; 78
 99e:	31 97       	sbiw	r30, 0x01	; 1
 9a0:	f1 f7       	brne	.-4      	; 0x99e <__stack+0x13f>
 9a2:	00 c0       	rjmp	.+0      	; 0x9a4 <__stack+0x145>
 9a4:	00 00       	nop
		}
		_delay_ms(10);
		lcd_init();
 9a6:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
		
		lcd_print("Thank you!!");
 9aa:	81 ed       	ldi	r24, 0xD1	; 209
 9ac:	91 e0       	ldi	r25, 0x01	; 1
 9ae:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_print>
		
		return 0;
	}

	return 0;
}
 9b2:	80 e0       	ldi	r24, 0x00	; 0
 9b4:	90 e0       	ldi	r25, 0x00	; 0
 9b6:	60 96       	adiw	r28, 0x10	; 16
 9b8:	0f b6       	in	r0, 0x3f	; 63
 9ba:	f8 94       	cli
 9bc:	de bf       	out	0x3e, r29	; 62
 9be:	0f be       	out	0x3f, r0	; 63
 9c0:	cd bf       	out	0x3d, r28	; 61
 9c2:	df 91       	pop	r29
 9c4:	cf 91       	pop	r28
 9c6:	1f 91       	pop	r17
 9c8:	0f 91       	pop	r16
 9ca:	08 95       	ret

000009cc <__tablejump2__>:
 9cc:	ee 0f       	add	r30, r30
 9ce:	ff 1f       	adc	r31, r31
 9d0:	05 90       	lpm	r0, Z+
 9d2:	f4 91       	lpm	r31, Z
 9d4:	e0 2d       	mov	r30, r0
 9d6:	09 94       	ijmp

000009d8 <atoi>:
 9d8:	fc 01       	movw	r30, r24
 9da:	88 27       	eor	r24, r24
 9dc:	99 27       	eor	r25, r25
 9de:	e8 94       	clt
 9e0:	21 91       	ld	r18, Z+
 9e2:	20 32       	cpi	r18, 0x20	; 32
 9e4:	e9 f3       	breq	.-6      	; 0x9e0 <atoi+0x8>
 9e6:	29 30       	cpi	r18, 0x09	; 9
 9e8:	10 f0       	brcs	.+4      	; 0x9ee <atoi+0x16>
 9ea:	2e 30       	cpi	r18, 0x0E	; 14
 9ec:	c8 f3       	brcs	.-14     	; 0x9e0 <atoi+0x8>
 9ee:	2b 32       	cpi	r18, 0x2B	; 43
 9f0:	41 f0       	breq	.+16     	; 0xa02 <atoi+0x2a>
 9f2:	2d 32       	cpi	r18, 0x2D	; 45
 9f4:	39 f4       	brne	.+14     	; 0xa04 <atoi+0x2c>
 9f6:	68 94       	set
 9f8:	04 c0       	rjmp	.+8      	; 0xa02 <atoi+0x2a>
 9fa:	0e 94 0a 05 	call	0xa14	; 0xa14 <__mulhi_const_10>
 9fe:	82 0f       	add	r24, r18
 a00:	91 1d       	adc	r25, r1
 a02:	21 91       	ld	r18, Z+
 a04:	20 53       	subi	r18, 0x30	; 48
 a06:	2a 30       	cpi	r18, 0x0A	; 10
 a08:	c0 f3       	brcs	.-16     	; 0x9fa <atoi+0x22>
 a0a:	1e f4       	brtc	.+6      	; 0xa12 <atoi+0x3a>
 a0c:	90 95       	com	r25
 a0e:	81 95       	neg	r24
 a10:	9f 4f       	sbci	r25, 0xFF	; 255
 a12:	08 95       	ret

00000a14 <__mulhi_const_10>:
 a14:	7a e0       	ldi	r23, 0x0A	; 10
 a16:	97 9f       	mul	r25, r23
 a18:	90 2d       	mov	r25, r0
 a1a:	87 9f       	mul	r24, r23
 a1c:	80 2d       	mov	r24, r0
 a1e:	91 0d       	add	r25, r1
 a20:	11 24       	eor	r1, r1
 a22:	08 95       	ret

00000a24 <eeprom_read_block>:
 a24:	dc 01       	movw	r26, r24
 a26:	cb 01       	movw	r24, r22

00000a28 <eeprom_read_blraw>:
 a28:	fc 01       	movw	r30, r24
 a2a:	e1 99       	sbic	0x1c, 1	; 28
 a2c:	fe cf       	rjmp	.-4      	; 0xa2a <eeprom_read_blraw+0x2>
 a2e:	06 c0       	rjmp	.+12     	; 0xa3c <eeprom_read_blraw+0x14>
 a30:	ff bb       	out	0x1f, r31	; 31
 a32:	ee bb       	out	0x1e, r30	; 30
 a34:	e0 9a       	sbi	0x1c, 0	; 28
 a36:	31 96       	adiw	r30, 0x01	; 1
 a38:	0d b2       	in	r0, 0x1d	; 29
 a3a:	0d 92       	st	X+, r0
 a3c:	41 50       	subi	r20, 0x01	; 1
 a3e:	50 40       	sbci	r21, 0x00	; 0
 a40:	b8 f7       	brcc	.-18     	; 0xa30 <eeprom_read_blraw+0x8>
 a42:	08 95       	ret

00000a44 <eeprom_write_block>:
 a44:	dc 01       	movw	r26, r24
 a46:	cb 01       	movw	r24, r22
 a48:	03 c0       	rjmp	.+6      	; 0xa50 <eeprom_write_block+0xc>
 a4a:	2d 91       	ld	r18, X+
 a4c:	0e 94 2d 05 	call	0xa5a	; 0xa5a <eeprom_write_r18>
 a50:	41 50       	subi	r20, 0x01	; 1
 a52:	50 40       	sbci	r21, 0x00	; 0
 a54:	d0 f7       	brcc	.-12     	; 0xa4a <eeprom_write_block+0x6>
 a56:	08 95       	ret

00000a58 <eeprom_write_byte>:
 a58:	26 2f       	mov	r18, r22

00000a5a <eeprom_write_r18>:
 a5a:	e1 99       	sbic	0x1c, 1	; 28
 a5c:	fe cf       	rjmp	.-4      	; 0xa5a <eeprom_write_r18>
 a5e:	9f bb       	out	0x1f, r25	; 31
 a60:	8e bb       	out	0x1e, r24	; 30
 a62:	2d bb       	out	0x1d, r18	; 29
 a64:	0f b6       	in	r0, 0x3f	; 63
 a66:	f8 94       	cli
 a68:	e2 9a       	sbi	0x1c, 2	; 28
 a6a:	e1 9a       	sbi	0x1c, 1	; 28
 a6c:	0f be       	out	0x3f, r0	; 63
 a6e:	01 96       	adiw	r24, 0x01	; 1
 a70:	08 95       	ret

00000a72 <_exit>:
 a72:	f8 94       	cli

00000a74 <__stop_program>:
 a74:	ff cf       	rjmp	.-2      	; 0xa74 <__stop_program>
